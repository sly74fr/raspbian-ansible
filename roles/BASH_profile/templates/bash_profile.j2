# .bash_profile

# User specific environment and startup programs

# Personnal prompt setup
#PS1="[\u@\h:\W]\$ "
#PS1="[\e[7m\][\u@\h: \w - \t]\[\e[m\]\$ "
PS1="\[\033[7m\][\u@\h: \w - \t]\[\033[0m\] \$ "

# Personnal history setup
export HISTCONTROL=ignorespace:ignoredups:erasedups
export HISTSIZE=100000
shopt -s histappend

# Personnal aliases
alias ll='ls -lh'
alias lll='ls -laih'
alias rm='rm -i'
alias cd-='cd -'
alias cd..='cd ..'
alias ..='cd ..'
alias ,,='cd ..'
alias ...='cd ../..'
alias ....='cd ..; cd ..; cd ..;'
alias .....='cd ..; cd ..; cd ..; cd..'
alias ......='cd ..; cd ..; cd ..; cd..; cd..'
alias .......='cd ..; cd ..; cd ..; cd..; cd..; cd..'
alias ..l='cd ..; l'
alias treee='pwd;find . -path ./node_modules -prune -o -print | sort | sed '\''1d;s/^\.//;s/\/\([^/]*\)$/|--\1/;s/\/[^/|]*/| /g'\'''
alias du='du -sh'
alias df='df -h'
alias quit='kill -15'
alias psx='ps -x'
alias psxg='ps -x|grep'
alias psa='ps -aef'
alias psag='ps -aef|grep'
#alias make='make -j'
alias tf='tail -f'
alias h='history | grep '
alias ha='history -a'
alias hl='history -r'

#######
# GIT #
#######
alias gh='git help'
alias gst='git status --column'
alias glo='git log --graph --all --decorate --date-order --name-status'
alias gdi='git diff'
alias gad='git add'
alias gci='git commit -v'
alias gcp='git cherry-pick'
alias gco='git checkout'
alias gbl='git branch -vv'
alias gbr='git branch -avv'
alias gbd='gbr && echo "Delete ???" && read && git branch -D'
alias grv='git remote -v'
alias gru='gbr && echo "Prune ???" && read && git remote update origin --prun'
alias gph='git push -v -n && echo "Push ???" && read && git push'
alias gpl='git pull -v --dry-run && echo "Pull ???" && read && git pull'
alias gsh='git stash -h'
alias gsl='git stash list'
alias gss='git stash show'
alias gsa='git stash push'
alias gsd='gsl && echo "Drop ???" && read && git stash drop'
alias gsp='gsl && echo "Pop ???" && read && git stash pop'
# Displays lines of code per file in git repo and sum of all. Only looks for files in src directory.
gwc() {
    git ls-files \
        | xargs file \
        | grep text \
        | grep -o ^.*: \
        | tr -d ":" \
        | grep ^src/.* \
        | xargs wc -l 
}

# Personnal Functions
cdl() { cd "$@" && ll; }
l() {
    if [ $# -eq 0 ]; then
        ll
    else
        if [ -d "$1" ]; then
            ll $1
        else
            cat $1
        fi
    fi
}
mkcd() { mkdir -p "$1" && cd "$1"; }

he() { history -a ; vi ~/.bash_history ; history -r ; }
hg()
{
    if [ $# -lt 1 ]; then
        history | awk '{$1=""; print $0}'
    else
        history | awk '{$1=""; print $0}' | grep $1
    fi
}

# Swap two file's content
swap()
{
    if [ $# -lt 2 ]; then
        echo "usage: swap file1 file2"
        return 1
    fi

    if [ ! -f "${1}" ]; then
        echo "swap: '${1}' file does not exist, exiting..."
        return 1
    fi

    if [ ! -f "${2}" ]; then
        echo "swap: '${2}' file does not exist, exiting..."
        return 1
    fi

    TMPFILE=`mktemp -q /${TMPDIR}/swap.XXXXXX`
    if [ $? -ne 0 ]; then
        echo "swap: Can't create '${TMPFILE}' temp file, exiting..."
        return 1
    fi

    mv -f ${1} ${TMPFILE} && mv ${2} ${1} && mv ${TMPFILE} ${2};
    if [ $? -ne 0 ]; then
        echo "swap: Can't swap files '${1}' and '${2}', exiting..."
        return 1
    fi

    return 0
}

search()
{
    eval TOKEN=\${$#}
    eval PATHES=\${*%${!#}}
    grep -rain $TOKEN $PATHES
}

# Machine specific settings

